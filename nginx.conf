events {
    worker_connections 1000;
}

http {
    access_log off;
    sendfile on;

    upstream api {
        server api01:8080;
        server api02:8080;
    }

    upstream frontend {
        server frontend:3000;
    }

    server {
        listen 9999;

        location / {
            proxy_pass http://api;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Cabeçalhos CORS para permitir requisições do frontend
            if ($http_origin = "http://localhost:3000") {
                add_header 'Access-Control-Allow-Origin' $http_origin always;
            }
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Origin, Authorization, Content-Type, Accept' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
            add_header 'Access-Control-Max-Age' 3600 always;

            # Tratamento de requisições OPTIONS (pré-voo)
            if ($request_method = 'OPTIONS') {
                return 204;
            }
        }

        location /frontend/ {
            proxy_pass http://frontend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}